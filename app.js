var express = require('Express');
var app = express();
var server = require('http').createServer(app);
var io = require('socket.io')(server);
server.listen(8080);
var Web3 = require("web3");
web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));

app.use(express.static("public"));
app.get("/", function (req, res) {
    res.sendFile(__dirname + "/public/html/index.html");
})


var proofContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"fileHash","type":"string"}],"name":"get","outputs":[{"name":"timeStamp","type":"uint256"},{"name":"owner","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"fileHash","type":"string"},{"name":"owner","type":"string"}],"name":"set","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"timeStamp","type":"uint256"},{"indexed":false,"name":"owner","type":"string"},{"indexed":false,"name":"status","type":"bool"},{"indexed":false,"name":"fileHash","type":"string"}],"name":"LogfileAddedStatus","type":"event"}]);
// deploy the contract
// var proof = proofContract.new(
//    {
//      from: web3.eth.accounts[0], 
//      data: '0x6060604052341561000f57600080fd5b6107a58061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063693ec85e14610051578063e942b5161461012e575b600080fd5b341561005c57600080fd5b6100ac600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101ce565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100f25780820151818401526020810190506100d7565b50505050905090810190601f16801561011f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b341561013957600080fd5b6101cc600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061035a565b005b60006101d86106c0565b6000836040518082805190602001908083835b60208310151561021057805182526020820191506020810190506020830392506101eb565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101546000846040518082805190602001908083835b60208310151561027f578051825260208201915060208101905060208303925061025a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001808054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b5050505050905091509150915091565b600080836040518082805190602001908083835b602083101515610393578051825260208201915060208101905060208303925061036e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010154141561059d576040805190810160405280828152602001428152506000836040518082805190602001908083835b60208310151561041d57805182526020820191506020810190506020830392506103f8565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001908051906020019061046c9291906106d4565b50602082015181600101559050507f54dfa8b120378ef0a50bffa98d983d4ba0717e14d72756e0e4d38935ca2516be428260018560405180858152602001806020018415151515815260200180602001838103835286818151815260200191508051906020019080838360005b838110156104f45780820151818401526020810190506104d9565b50505050905090810190601f1680156105215780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561055a57808201518184015260208101905061053f565b50505050905090810190601f1680156105875780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a16106bc565b7f54dfa8b120378ef0a50bffa98d983d4ba0717e14d72756e0e4d38935ca2516be428260008560405180858152602001806020018415151515815260200180602001838103835286818151815260200191508051906020019080838360005b838110156106175780820151818401526020810190506105fc565b50505050905090810190601f1680156106445780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561067d578082015181840152602081019050610662565b50505050905090810190601f1680156106aa5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a15b5050565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061071557805160ff1916838001178555610743565b82800160010185558215610743579182015b82811115610742578251825591602001919060010190610727565b5b5090506107509190610754565b5090565b61077691905b8082111561077257600081600090555060010161075a565b5090565b905600a165627a7a723058206e6ed5fdb66c170a0c9d63875d8f78a8ba56ec240fc41c5de68c38f2820675850029', 
//      gas: '4700000'
//    }, function (e, contract){
//     console.log(e, contract);
//     if (typeof contract.address !== 'undefined') {
//          console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
//     }
//  })
 // my block hash from geth 
var proof = proofContract.at("0x40c6107376c98edc0b673ce9fb1cc7be7653492add365e43c8556ca122177817");

app.get("/submit", function (req, res) {
    var fileHash = req.query.hash;
    var owner = req.query.owner;
    proof.set.sendTransaction(owner, fileHash, {
        from: web3.eth.accounts[0],
    }, function (error, transactionHash) {
        if (!error) {
            res.send(transactionHash);
        }
        else {
            res.send("Error");
        }
    })
})
app.get("/getInfo", function (req, res) {
    var fileHash = req.query.hash;
    var details = proof.get.call(fileHash);
    res.send(details);
})
 proof.LogfileAddedStatus.watch(function(error, result){
if(!error)
{
 if(result.args.status == true)
 {
 io.send(result);
 }
}
})

